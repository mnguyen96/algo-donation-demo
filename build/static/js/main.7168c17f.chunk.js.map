{"version":3,"sources":["wallet/styles.module.scss","wallet/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Wallet","myAlgoWallet","Pipeline","init","timer","setInterval","state","address","balance","then","setState","s","message","trxId","amount","e","persist","target","value","this","customAmount","prevProps","prevState","ToastMessage","Provider","ref","node","window","toastProvider","Card","className","styles","card","bg","maxWidth","mx","style","display","alignItems","Algo","marginLeft","color","size","donate","heading","Radio","label","checked","onChange","changeAmount","required","Input","type","placeholder","marginTop","width","props","recipient","send","AlgoSendButton","parseInt","note","context","wallet","addMessage","secondaryMessage","actionHref","main","actionText","closeElem","variant","button","returnTo","SwitchNet","React","Component","App","defaultProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7168c17f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__Kg-YG\",\"button\":\"styles_button__1tUrt\",\"donate\":\"styles_donate__h5aDN\",\"send\":\"styles_send__3s8PR\",\"radios\":\"styles_radios__UU9yy\",\"heading\":\"styles_heading__28nTv\",\"customAmount\":\"styles_customAmount__37KV0\"};","import React from 'react';\nimport { Card, AlgoButton, Pipeline, Input, Flash, Radio, SwitchNet, AlgoSendButton, ToastMessage } from 'pipeline-ui';\nimport { Algo } from '@pipeline-ui/icons';\nimport styles from './styles.module.scss';\n\nexport default class Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      balance: '',\n      message: '',\n      address: '',\n      trxId: '',\n      amount: '1',\n    };\n  }\n\n  myAlgoWallet = Pipeline.init();\n\n  timer = setInterval(() => {\n    if (this.state.address) {\n      Pipeline.balance(this.state.address).then((balance) => {\n        this.setState((s) => ({ ...s, balance }));\n      });\n    }\n  }, 10000);\n\n  changeAmount(e) {\n    e.persist();\n    if (e.target.value >= 0) {\n      this.setState((s) => ({ ...s, customAmount: '', amount: e.target.value }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState?.address && prevState?.address !== this.state.address) {\n      Pipeline.balance(this.state.address).then((balance) => {\n        this.setState((s) => ({ ...s, balance }));\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ToastMessage.Provider ref={(node) => (window.toastProvider = node)} />\n        <Card className={styles.card} bg={'grey'} maxWidth={'420px'} mx={'auto'}>\n          {this.state.address && (\n            <>\n              <h3>\n                <b>Current address:</b> {this.state.address}\n              </h3>\n              <h3\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <b>Balance:&nbsp;</b> {this.state.balance}{' '}\n                <Algo style={{ marginLeft: '3px' }} color=\"black\" size=\"15\" />\n              </h3>\n              <div className={styles.donate}>\n                <h3 className={styles.heading}>\n                  Select amount\n                  <Radio\n                    label=\"1 ALGO\"\n                    value={'1'}\n                    checked={this.state.amount === '1'}\n                    onChange={this.changeAmount}\n                    required={true}\n                  />\n                  <Radio label=\"5 ALGO\" value={'5'} checked={this.state.amount === '5'} onChange={this.changeAmount} />\n                  <Radio\n                    label=\"10 ALGO\"\n                    value={'10'}\n                    checked={this.state.amount === '10'}\n                    onChange={this.changeAmount}\n                  />\n                  <Radio\n                    label=\"20 ALGO\"\n                    value={'20'}\n                    checked={this.state.amount === '20'}\n                    onChange={this.changeAmount}\n                  />\n                  <Radio\n                    label=\"50 ALGO\"\n                    value={'50'}\n                    checked={this.state.amount === '50'}\n                    onChange={this.changeAmount}\n                  />\n                  <Input\n                    type=\"number\"\n                    required={true}\n                    placeholder=\"Other amount\"\n                    value={this.state.customAmount}\n                    onChange={(e) => {\n                      e.persist();\n                      if (e.target.value >= 0) {\n                        this.setState((s) => ({ ...s, amount: 0, customAmount: e.target.value }));\n                      }\n                    }}\n                    marginTop=\"10px\"\n                  />\n                </h3>\n                <h3 className={styles.heading}>\n                  Message <i>(optional)</i>\n                  <Input\n                    type=\"text\"\n                    required={false}\n                    onChange={(e) => {\n                      e.persist();\n                      this.setState((s) => ({ ...s, message: e.target.value }));\n                    }}\n                    value={this.state.message}\n                    width={'100%'}\n                  />\n                </h3>\n                <h3>\n                  <b>Recipient:</b> {this.props.recipient}\n                </h3>\n\n                <div className={styles.send}>\n                  <AlgoSendButton\n                    recipient={this.props.recipient}\n                    amount={parseInt(this.state.amount || this.state.customAmount) * 1000000}\n                    note={this.state.message || ''}\n                    context={this}\n                    wallet={this.myAlgoWallet}\n                    onChange={(trxId) => {\n                      this.setState((s) => ({ ...s, trxId }));\n                      window.toastProvider.addMessage('Thanks for donating!', {\n                        secondaryMessage: 'Check here to view progress',\n                        actionHref:\n                          (Pipeline.main ? 'https://algoexplorer.io/tx/' : 'https://testnet.algoexplorer.io/tx/') +\n                          trxId,\n                        actionText: 'Check',\n                        closeElem: true,\n                        variant: 'processing',\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            </>\n          )}\n          {!this.state.address && (\n            <div className={styles.button}>\n              <div>\n                <AlgoButton wallet={this.myAlgoWallet} context={this} returnTo={'address'} />\n                <SwitchNet />\n              </div>\n            </div>\n          )}\n        </Card>\n      </>\n    );\n  }\n}\n\nWallet.defaultProps = {\n  recipient: 'XC26IQQ4FFFI3AORB7KHK6Y6O2O2N5VT7SSYG2J74M2KSDSJV2CETX5NUE',\n};\n","import React from 'react';\nimport { Algo } from '@pipeline-ui/icons';\nimport './App.scss';\nimport Wallet from './wallet';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"panels\">\n        <div className=\"info\">\n          <h1>\n            Donate Algorand\n            <Algo style={{ marginLeft: '3px' }} color=\"black\" size=\"50\" />\n          </h1>\n          Welcome to the Algorand example donation app! Please connect your MyAlgo wallet in order to start using the\n          app.\n        </div>\n        <div className=\"donation\">\n          <Wallet />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}